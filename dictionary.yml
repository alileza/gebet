---

expression_map:
    string: '"([^"]*)"'
    number: '(\d+)'
    duration: '(["]*)'
    json: '$'
    table: '$'

resources:
    parameters:
        - name: resource
          description: selected resource that is going to be used
          type: string
    list:
        - name: http/client
          description: http client that can be used for sending http requests and comparing the responses
          options:
              - name: base_url
                description: base url for the http client that will automatically be prepended to any route in the feature.
                type: string
              - name: timeout
                description: timeout for the request round-trip.
                type: duration
          actions:
              - name: send
                description: send an http request without a request body
                handle: sendsAHTTPRequestTo
                expressions:
                    - $resource sends a $method HTTP request to $target
                parameters:
                    - name: target
                      description: HTTP URL route to use when sending the request (`/status`) 
                      type: string
                    - name: method
                      description: HTTP method to use when sending the request (`GET`)
                      type: string

              - name: send_body
                description: send an http request with a request body
                handle: sendRequestWithBody
                expressions:
                    - $resource sends a $method HTTP request to $target with payload $body
                    - $resource sends a $method HTTP request to $target with body $body
                parameters:
                    - name: target
                      description: HTTP URL route to use when sending the request (`/users`) 
                      type: string
                    - name: method
                      description: HTTP method to use when sending the request (`POST`)
                      type: string
                    - name: body
                      description: request body payload
                      type: json

              - name: response_code
                description: check http response code
                handle: checkResponseCode
                expressions:
                    - $resource response code should be $code
                parameters:
                    - name: code
                      description: http response code (`200`)
                      type: number

              - name: response_body
                description: check response body
                handle: checkResponseBody
                expressions:
                    - $resource response body should be $body
                parameters:
                    - name: body
                      description: expected response body
                      type: json

        - name: http/server
          description: http server that mocks API responses 
          options:
              - name: port
                description: http server port to expose
                type: number
          actions:
              - name: response
                description: set a response code and body for any request that comes to the http/server target
                handle: setResponse
                expressions:
                    - set $resource response code to $code and response body $body
                    - $resource responds with a $code status code and a response body of $body
                parameters:
                    - name: code
                      description: http response code (`404`)
                      type: number
                    - name: body
                      description: server response body
                      type: json

              - name: response_path
                description: set a response code and body for a given path for the http/server
                handle: setResponse
                expressions:
                    - set $resource with path $path response code to $code and response body $body
                    - $resource with path $path responds with a $code status code and a response body of $body
                parameters:
                    - name: path
                      description: server endpoint path (`/status`)
                      type: string
                    - name: code
                      description: server response code (`200`)
                      type: number
                    - name: body
                      description: server response body
                      type: json

        - name: database/sql
          description: database driver that interacts with a sql database
          options:
              - name: driver
                description: sql driver (postgres or mysql)
                type: string
              - name: datasource
                description: sql database source name (`postgres://user:pass@host:port/dbname?sslmode=disable`)
                type: string
          actions:
              - name: set
                description: truncates the target table and sets row results to the passed values 
                handle: tableInsert
                expressions:
                    - set $resource table $table list of content $content
                    - $resource $table contains the rows $content
                    - $resource $table contains the row $content
                parameters:
                    - name: table
                      description: table name
                      type: string
                    - name: content
                      description: table row content in Gherkin table syntax
                      type: table

              - name: check
                description: compares table content after an action
                handle: tableCompare
                expressions:
                    - $resource table $table should look like $content
                    - $resource $table should contain the rows $content
                    - $resource $table should contain the row $content
                parameters:
                    - name: table
                      description: table name
                      type: string
                    - name: content
                      description: table row content in Gherkin table syntax
                      type: table

        - name: queue
          description: messaging queue that that publishes and serves messages
          options:
            - name: driver
              description: queue driver (rabbitmq)
              type: string
            - name: datasource
              description: queue source dsn (`amqp://user:pass@host:port/`)
              type: string
          actions:
            - name: publish
              description: publish a message to message queue
              handle: publishMessage
              expressions:
                  - publish message to $resource target $target with payload $payload
                  - a message is published to $resource target $target with the payload $payload
              parameters:
                  - name: target
                    description: target syntax changes depending on the driver, using rabbitmq `[exchange]:[routing-key]`
                    type: string
                  - name: payload
                    description: queue message payload
                    type: json

            - name: listen
              description: |
                    listen for messages on a given queue. Declaration should be before the publish action
              handle: listenMessage
              expressions:
                  - listen message from $resource target $target
                  - a listener is bound to $resource target $target  
              parameters:
                  - name: target
                    description: target syntax changes depending on the driver, using rabbitmq `[exchange]:[routing-key]`
                    type: string

            - name: count
              description: count messages for a given target. Declaration should be before the publish action
              handle: countMessage
              expressions:
                  - message from $resource target $target count should be $count
                  - there should be $count messages in $resource target $target
              parameters:
                  - name: target
                    description: target syntax changes depending on the driver, using rabbitmq `[exchange]:[routing-key]`
                    type: string
                  - name: count
                    description: number of expected messages in the queue 
                    type: number

            - name: compare
              description: compare message payload. Declaration should be before the publish action
              handle: compareMessage
              expressions:
                  - message from $resource target $target should look like $payload
                  - the message from $resource target $target should look like $payload
              parameters:
                  - name: target
                    description: target syntax changes depending on the driver, using rabbitmq `[exchange]:[routing-key]`
                    type: string
                  - name: payload
                    description: queue message payload
                    type: json
